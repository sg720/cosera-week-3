## the first function set and get the inverse of the matrix and store it
## the second functon get the inverse using cache



makeCacheMatrix <- function(x = matrix()) {
  inv <- NULL
  set <- function(y){
    x <<- y
    inv <<- NULL
  }
  get <- function() x
  setinv<- function(inverse) inv <<- inverse
  getinv <- function() inv
  list(set=set, get=get,setinv=setinv,getinv=getinv)
}


## the function computes the inverse of the matrix

cacheSolve <- function(x,...) {
        ## Return a matrix that is the inverse of 'x'
  inv <- x$getinv()
  if(!is.null(inv)){
    message('get cache inverse')
    return(inv)
  }
  data <- x$get()
  inv <- solve(data,...)
  x$setinv(inv)
  inv
}
